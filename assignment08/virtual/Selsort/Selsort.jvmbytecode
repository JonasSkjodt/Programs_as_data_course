Classfile /C:/Users/jonas/Desktop/Programs_as_data/Programs_as_data_course/assignment08/virtual/Selsort/Selsort.class
  Last modified 31 Oct 2024; size 1347 bytes
  SHA-256 checksum 45b6eb74a9fd249e70791adc6be4f81f18979314c86434a5856471ee32a54889
  Compiled from "Selsort.java"
class Selsort
  minor version: 0
  major version: 63
  flags: (0x0020) ACC_SUPER
  this_class: #8                          // Selsort
  super_class: #2                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 4, attributes: 3
Constant pool:
   #1 = Methodref          #2.#3          // java/lang/Object."<init>":()V
   #2 = Class              #4             // java/lang/Object
   #3 = NameAndType        #5:#6          // "<init>":()V
   #4 = Utf8               java/lang/Object
   #5 = Utf8               <init>
   #6 = Utf8               ()V
   #7 = Fieldref           #8.#9          // Selsort.rnd:Ljava/util/Random;
   #8 = Class              #10            // Selsort
   #9 = NameAndType        #11:#12        // rnd:Ljava/util/Random;
  #10 = Utf8               Selsort
  #11 = Utf8               rnd
  #12 = Utf8               Ljava/util/Random;
  #13 = Integer            1000000
  #14 = Methodref          #15.#16        // java/util/Random.nextInt:(I)I
  #15 = Class              #17            // java/util/Random
  #16 = NameAndType        #18:#19        // nextInt:(I)I
  #17 = Utf8               java/util/Random
  #18 = Utf8               nextInt
  #19 = Utf8               (I)I
  #20 = Methodref          #8.#21         // Selsort.SelectionSort:([I)V
  #21 = NameAndType        #22:#23        // SelectionSort:([I)V
  #22 = Utf8               SelectionSort
  #23 = Utf8               ([I)V
  #24 = Fieldref           #25.#26        // java/lang/System.out:Ljava/io/PrintStream;
  #25 = Class              #27            // java/lang/System
  #26 = NameAndType        #28:#29        // out:Ljava/io/PrintStream;
  #27 = Utf8               java/lang/System
  #28 = Utf8               out
  #29 = Utf8               Ljava/io/PrintStream;
  #30 = InvokeDynamic      #0:#31         // #0:makeConcatWithConstants:(I)Ljava/lang/String;
  #31 = NameAndType        #32:#33        // makeConcatWithConstants:(I)Ljava/lang/String;
  #32 = Utf8               makeConcatWithConstants
  #33 = Utf8               (I)Ljava/lang/String;
  #34 = Methodref          #35.#36        // java/io/PrintStream.print:(Ljava/lang/String;)V
  #35 = Class              #37            // java/io/PrintStream
  #36 = NameAndType        #38:#39        // print:(Ljava/lang/String;)V
  #37 = Utf8               java/io/PrintStream
  #38 = Utf8               print
  #39 = Utf8               (Ljava/lang/String;)V
  #40 = Methodref          #35.#41        // java/io/PrintStream.println:()V
  #41 = NameAndType        #42:#6         // println:()V
  #42 = Utf8               println
  #43 = Methodref          #15.#3         // java/util/Random."<init>":()V
  #44 = Utf8               Code
  #45 = Utf8               LineNumberTable
  #46 = Utf8               main
  #47 = Utf8               ([Ljava/lang/String;)V
  #48 = Utf8               StackMapTable
  #49 = Class              #50            // "[I"
  #50 = Utf8               [I
  #51 = Utf8               <clinit>
  #52 = Utf8               SourceFile
  #53 = Utf8               Selsort.java
  #54 = Utf8               BootstrapMethods
  #55 = MethodHandle       6:#56          // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #56 = Methodref          #57.#58        // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #57 = Class              #59            // java/lang/invoke/StringConcatFactory
  #58 = NameAndType        #32:#60        // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #59 = Utf8               java/lang/invoke/StringConcatFactory
  #60 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #61 = String             #62            // \u0001
  #62 = Utf8               \u0001
  #63 = Utf8               InnerClasses
  #64 = Class              #65            // java/lang/invoke/MethodHandles$Lookup
  #65 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #66 = Class              #67            // java/lang/invoke/MethodHandles
  #67 = Utf8               java/lang/invoke/MethodHandles
  #68 = Utf8               Lookup
{
// https://en.wikipedia.org/wiki/List_of_Java_bytecode_instructions

  0 = arr
  1 = I
  2 = least
  3 = j
  3 = tmp (after inner for loop)

  public static void SelectionSort(int[]);
    descriptor: ([I)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=4, args_size=1
         0: iconst_0                  // load the int value 0 onto the stack 
         1: istore_1                  // store int value into variable 1 (i)
         2: iload_1                   // load int value from local variable 1 (i)
         3: aload_0                   // load reference onto the stack from local variable 0 (arr)
         4: arraylength               // get the length of an array
         5: if_icmpge     57          // if-statement (jumps to 57 if its false) (i < arr.length)
         8: iload_1                   // load int value from local variable 1 (i)
         9: istore_2                  // store int value into variable 2 (least)
        10: iload_1                   // load int value from local variable 1 (i)
        11: iconst_1                  // load the int value 1 onto the stack
        12: iadd                      // adds two int
        13: istore_3                  // store int value result into variable 3 (j)
        14: iload_3                   // load int value from local variable 3 (arr[j])
        15: aload_0                   // load reference onto the stack from local variable 0 (arr)
        16: arraylength               // get the length of an array
        17: if_icmpge     37          // if-statement (jumps to 37 if its true)
        20: aload_0                   // get arr (load ref from local var 0 (arr))
        21: iload_3                   // get j
        22: iaload                    // get arr[j] (arrayref, index â†’ value)	(load an int from an array)
        23: aload_0                   // get arr
        24: iload_2                   // get least
        25: iaload                    // get arr[least]
        26: if_icmpge     31          // if (arr[j] < arr[least]) jump to 31
        29: iload_3                   // get j
        30: istore_2                  // store the value of j in least 
        31: iinc          3, 1        // (index 3 (j), const 1)     increment local variable #index by signed byte const / j++
        34: goto          14          // jump to 14
        37: aload_0                   // load reference onto the stack from local variable 0 (arr)
        38: iload_1                   // load int value from local variable 1 (i)
        39: iaload                    // get arr[i]
        40: istore_3                  // store value of arr[i] in tmp (we're guessing it has a built in garbage collector)
        41: aload_0                   // get arr
        42: iload_1                   // load int value from local variable 1 (i)
        43: aload_0                   // get arr
        44: iload_2                   // get least
        45: iaload                    // get arr[least]
        46: iastore                   // store the value of arr[least] in arr[i]
        47: aload_0                   // get arr
        48: iload_2                   // get least
        49: iload_3                   // get tmp
        50: iastore                   // store the value of j in arr[least]  (arr[least] = tmp)
        51: iinc          1, 1        // i++
        54: goto          2           // goto 2
        57: return                    // returns
}